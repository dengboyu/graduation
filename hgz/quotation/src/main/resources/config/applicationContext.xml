<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
	   		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
	   >

	<!-- 对除了Controller包其他包进行注解扫描 -->
	<context:component-scan base-package="com.hgz.quotation">
		<!--去掉controller,防止影响事务管理-->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!--开启aspectj注解,获取代理   proxy-target-class开启cglib-->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>


	<!-- 加载属性配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/db.properties</value>
			</list>
		</property>
	</bean>

	<!--阿里巴巴数据连接池-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${mysql.driver}"/>
		<property name="url" value="${mysql.url}"/>
		<property name="username" value="${mysql.username}"/>
		<property name="password" value="${mysql.password}"/>
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${mysql.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${mysql.maxActive}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${mysql.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${mysql.maxWait}"></property>
	</bean>


	<!-- 加载mapper和mybatis配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mapper/*/*.xml"></property>
		<property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
	</bean>


	<!-- 扫描dao层 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hgz.quotation.module.*.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理器 transaction manager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--注解管理事务-->
	<tx:annotation-driven/>


	<!--shiro的配置-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!--过滤器链定义，从上向下顺序执行，一般将/**放在最下边-->
		<property name="filterChainDefinitions">
			<value>
				<!--对静态资源访问匿名访问-->
			</value>
		</property>
	</bean>


	<!--securityManager安全管理器，负责进行认证和授权、会话、缓存的管理-->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--注入realm域，相当于数据源-->
		<property name="realm" ref="myRealm"></property>
	</bean>
	<aop:config proxy-target-class="true"></aop:config>
	<!--realm-->
	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->
	<bean id="myRealm" class="com.hgz.quotation.module.authentication.MyRealm"/>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>


	<!-- 异步线程池 -->
	<bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数  -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>



</beans>