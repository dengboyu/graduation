<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xsh.activity.module.act.dao.ActDao">

    <!-- 以下代码片段中,act表的别名为RA -->

    <!-- act表的字段 -->
    <sql id ="act_columns">
        RA.id,RA.actName,RA.actPerson,RA.communityId,RA.actTime,RA.actWhere,RA.actIntro,RA.actDetail,RA.createTime,RA.updateTime
    </sql>

    
    <!-- act表的resultMap映射 -->
    <resultMap id="entityResultMap" type="com.xsh.activity.module.act.entity.ActEntity">
        <id  property="id"  column="id"/>
        <result  property="actName"  column="actName"/>
        <result  property="actPerson"  column="actPerson"/>
        <result  property="communityId"  column="communityId"/>
        <result  property="actTime"  column="actTime"/>
        <result  property="actWhere"  column="actWhere"/>
        <result  property="actIntro"  column="actIntro"/>
        <result  property="actDetail"  column="actDetail"/>
        <result  property="createTime"  column="createTime"/>
        <result  property="updateTime"  column="updateTime"/>
    </resultMap>


    <!-- 添加一条记录 -->
    <insert id="insertEntity" parameterType="com.xsh.activity.module.act.entity.ActEntity" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO act
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            actName,
            actPerson,
            communityId,
            actTime,
            actWhere,
            actIntro,
            actDetail,
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            #{id},
            #{actName},
            #{actPerson},
            #{communityId},
            #{actTime},
            #{actWhere},
            #{actIntro},
            #{actDetail},
        </trim>
    </insert>


    <!-- 批量添加 -->
    <insert id="insertEntityByBatch" parameterType="list" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO act
        <trim prefix="(" suffix=") VALUES" suffixOverrides=",">
            id,
            actName,
            actPerson,
            communityId,
            actTime,
            actWhere,
            actIntro,
            actDetail,
        </trim>
        <foreach collection="list" index="index" item="item" separator=",">
        (
            #{item.id},
            #{item.actName},
            #{item.actPerson},
            #{item.communityId},
            #{item.actTime},
            #{item.actWhere},
            #{item.actIntro},
            #{item.actDetail}
        )
        </foreach>
    </insert>


    <!-- 更新一条记录 -->
    <update id="updateEntity" parameterType="com.xsh.activity.module.act.entity.ActEntity">
        UPDATE act
        <trim prefix="set" suffixOverrides=",">
            <if test="actName != null">
                actName = #{actName},
            </if>
            <if test="actPerson != null">
                actPerson = #{actPerson},
            </if>
            <if test="communityId != null">
                communityId = #{communityId},
            </if>
            <if test="actTime != null">
                actTime = #{actTime},
            </if>
            <if test="actWhere != null">
                actWhere = #{actWhere},
            </if>
            <if test="actIntro != null">
                actIntro = #{actIntro},
            </if>
            <if test="actDetail != null">
                actDetail = #{actDetail},
            </if>
        </trim>
        WHERE id = #{id}
    </update>


    <!-- 根据主键删除一条记录 -->
    <delete id="deleteEntity">
        DELETE FROM act WHERE id = #{0}
    </delete>


    <!-- 根据列条件查询实体类信息 -->
    <sql id="whereColumns">
        <if test="id != null">
            AND RA.id = #{id}
        </if>
        <if test="actName != null">
            AND RA.actName = #{actName}
        </if>
        <if test="actPerson != null">
            AND RA.actPerson = #{actPerson}
        </if>
        <if test="communityId != null">
            AND RA.communityId = #{communityId}
        </if>
        <if test="actTime != null">
            AND RA.actTime = #{actTime}
        </if>
        <if test="actWhere != null">
            AND RA.actWhere = #{actWhere}
        </if>
        <if test="actIntro != null">
            AND RA.actIntro = #{actIntro}
        </if>
        <if test="actDetail != null">
            AND RA.actDetail = #{actDetail}
        </if>
        <if test="createTime != null">
            AND RA.createTime = #{createTime}
        </if>
        <if test="updateTime != null">
            AND RA.updateTime = #{updateTime}
        </if>
    </sql>


    <!-- 根据主键查找对应实体类 -->
    <select id="findEntityByMainId" resultType="com.xsh.activity.module.act.entity.ActEntity">
        SELECT
            <include refid="act_columns"></include>
        FROM act RA
        WHERE id = #{0}
    </select>


    <!-- 根据条件查出来是单条实体类 -->
    <select id="findEntityByOne" parameterType="com.xsh.activity.module.act.entity.ActEntity" resultType="com.xsh.activity.module.act.entity.ActEntity">
        SELECT
            <include refid="act_columns"></include>
        FROM
            act RA
        <where>
            <include refid="whereColumns"></include>
        </where>
    </select>


    <!-- 根据列条件查找实体类集合 -->
    <select id="findEntityList" parameterType="com.xsh.activity.module.act.entity.ActEntity" resultType="com.xsh.activity.module.act.entity.ActEntity">
        SELECT
            <include refid="act_columns"></include>
        FROM
            act RA
        <where>
            <include refid="whereColumns"></include>
        </where>
    </select>


    <!-- 查询记录数 -->
    <select id="findEntityCount" parameterType="com.xsh.activity.module.act.entity.ActEntity" resultType="long">
        SELECT
            count(1)
        FROM
            act RA
        <where>
            <include refid="whereColumns"></include>
        </where>
    </select>


    <!-- 单表分页查询 -->
    <select id="findPageEntityList" parameterType="map" resultType="com.xsh.activity.module.act.entity.ActEntity">
        SELECT
            <include refid="act_columns"></include>
        FROM
            act RA
        <where>
            <include refid="whereColumns"></include>
        </where>
        ORDER BY
        <choose>
            <when test="orderColumn!=null">
                RA.${orderColumn}
            </when>
            <otherwise>
                RA.createTime
            </otherwise>
        </choose>
        <choose>
            <when test="sortColumn!=null">
                ${sortColumn}
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
        LIMIT #{pageStart},#{pageSize}
    </select>


    <!-- 单表分页查询总计数量 -->
    <select id="findPageEntityCount" parameterType="map" resultType="long">
        SELECT
            count(1)
        FROM
            act RA
        <where>
            <include refid="whereColumns"></include>
        </where>
    </select>


</mapper>